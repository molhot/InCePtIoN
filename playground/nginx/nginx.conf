; listen: 
# クライアントからの接続を待ち受けるポートやIPアドレスを指定します。
; server_name: 
# リクエストのホスト名にマッチするドメイン名を指定します。
# この設定により、正しい「server」ブロックが選択されます。
; root: 静的ファイルのルートディレクトリを指定します。
; index: デフォルトのインデックスファイル（例: index.html）を指定します。
; location: 特定のURLパスや条件に一致するリクエストを処理するための詳細な設定を指定します。

server {
    listen          443 ssl;
    server_name     satushi.42.fr www.satushi.42.fr;

	error_log /etc/log/nginx/error.log;

    ssl on;
    ssl_certificate     /etc/ssl/certs/satushi.42.fr.crt;
    ssl_certificate_key /etc/ssl/private/satushi.42.fr.key;
    ssl_protocols       TLSv1.3;

    root    /var/www/;
    index   index.php index.html;

    location / {
        try_files $uri /index.php?$args;
    }

    location ~ \.php$(/|$) {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}

; 正規表現^(.+\.php)(/.+)$は、URIが.phpで終わる場合にマッチします。この正規表現は2つのキャプチャグループで構成されています。

; (.+\.php):
; 最初のキャプチャグループは、.phpで終わる任意の文字列にマッチします。
; .+は1文字以上の任意の文字を表し、\.はドット文字（.）をエスケープして表します。
; (/.+):
; 2番目のキャプチャグループは、スラッシュ（/）に続く1文字以上の任意の文字列にマッチします。
; 例えば、リクエストURIが/path/to/file.php/some/extra/pathの場合、この正規表現によって以下のように分割されます：

; パス情報（$fastcgi_path_info）: /some/extra/path
; スクリプト情報（$fastcgi_script_name）: /path/to/file.php
; これにより、FastCGIプロセスはパス情報とスクリプト情報を正しく解釈し、PHPスクリプトを適切に実行することができます。